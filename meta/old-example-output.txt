Some weights of the model checkpoint at roberta-large-mnli were not used when initializing RobertaForSequenceClassification: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
- This IS expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).

=> Models loaded successfully. Or maybe not idk let's see

=> Loaded text from https://edition.cnn.com/2023/10/29/sport/nfl-week-8-how-to-watch-spt-intl/index.html:
--------------------------------------------------
The best photos from the 2023 NFL season

CNN —

Week 8 of the NFL season kicked off on Thursday with the Buffalo Bills’ comeback victory over the Tampa Bay Buccaneers.

The action continues with a slate of great matchups across the league on Sunday. Here’s what to look for.

Los Angeles Rams @ Dallas Cowboys, 1:00 p.m. ET on FOX

The Dallas Cowboys return home on Sunday to host NFC rival Los Angeles Rams. Dallas will look to extend their home win streak to 11 games, while Los Angeles are aiming
--------------------------------------------------

=> Cleaned claims from the text:

1. Los Angeles Rams defeat Dallas Cowboys in Week 8 NFL match
2. Kenny Pickett of Pittsburgh Steelers has a QB rating of 35.5, surpassing that of Kansas City's Patrick Mahomes (34.7)
3. The game marked the first consecutive win for the Rams since their Super Bowl victory in February 2019
4. Pittsburgh's strong defense held Dallas to just 16 points, their lowest output in a regular-season game since 2015


=> No reliable sources found for this claim: Los Angeles Rams defeat Dallas Cowboys in Week 8 NFL match
Here are some unreliable ones instead.
1. https://www.dallascowboys.com/video/rams-vs-cowboys-highlights-week-8-2023
2. https://www.espn.com/nfl/game/_/gameId/401547505/rams-cowboys
3. https://www.nfl.com/videos/rams-top-plays-vs-cowboys-week-8
4. https://www.dallascowboys.com/photos/week-8-cowboys-vs-rams-2023
5. https://www.youtube.com/watch?v=R8pZqvdhj_A&pp=ygUGI3JyYW5z
6. https://www.therams.com/news/game-recap-rams-cowboys-week-8-matthew-stafford-aaron-donald
7. https://en.as.com/nfl/rams-vs-cowboys-live-online-stats-scores-and-highlights-nfl-week-8-n/
8. https://www.nfl.com/videos/rams-vs-cowboys-highlights-week-8
9. https://www.therams.com/photos/game-action-vs-dallas-cowboys-week-8-at-t-stadium-2023
10. https://www.youtube.com/watch?v=VSD1SXVUdBE


=> Found 1 reliable sources for claim: Kenny Pickett of Pittsburgh Steelers has a QB rating of 35.5, surpassing that of Kansas City's Patrick Mahomes (34.7)
1. https://steelerswire.usatoday.com/lists/steelers-nfl-kenny-pickett-patrick-mahomes-qbr/


=> Loaded text from https://steelerswire.usatoday.com/lists/steelers-nfl-kenny-pickett-patrick-mahomes-qbr/:
--------------------------------------------------
The season has been a nightmare for Pittsburgh Steelers quarterback Kenny Pickett despite the fact the team has found a way to be 3-2 after five games and leads the AFC North. But the reality is aside from a handful of good throws by Pickett, these first five games have been forgettable for the second-year quarterback.

Perhaps the most inclusive measure of a quarterback's success if total QBR. It's a measure created by ESPN back in 2011 and is something of an all-encompassing measure of how a q
--------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\output_parsers\json.py", line 88, in parse_result
    return parse_json_markdown(text)
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\utils\json.py", line 150, in parse_json_markdown
    return _parse_json(json_str, parser=parser)
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\utils\json.py", line 166, in _parse_json
    return parser(json_str)
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\utils\json.py", line 123, in parse_partial_json
    return json.loads(s, strict=strict)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\json\__init__.py", line 359, in loads
    return cls(**kw).decode(s)
           ~~~~~~~~~~~~~~~~^^^
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\json\decoder.py", line 345, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\json\decoder.py", line 363, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\Users\arkma\Sqrt-1\putting the pro in programming\0. Ongoing Projects\claim-extraction\main.py", line 302, in <module>
    main()
    ~~~~^^
  File "c:\Users\arkma\Sqrt-1\putting the pro in programming\0. Ongoing Projects\claim-extraction\main.py", line 270, in main
    source_claims: list[str] = claim_extractor.extract_claims(load_text(source_url))
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\arkma\Sqrt-1\putting the pro in programming\0. Ongoing Projects\claim-extraction\main.py", line 98, in extract_claims
    claims: list[str] = self.chain.invoke({"text": text, "format_instructions": self.parser.get_format_instructions()}).claims
                        ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3047, in invoke
    input_ = context.run(step.invoke, input_, config)
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\output_parsers\base.py", line 204, in invoke
    return self._call_with_config(
           ~~~~~~~~~~~~~~~~~~~~~~^
        lambda inner_input: self.parse_result([Generation(text=inner_input)]),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<2 lines>...
        run_type="parser",
        ^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 1940, in _call_with_config
    context.run(
    ~~~~~~~~~~~^
        call_func_with_variable_args,  # type: ignore[arg-type]
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    ),
    ^
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\runnables\config.py", line 428, in call_func_with_variable_args       
    return func(input, **kwargs)  # type: ignore[call-arg]
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\output_parsers\base.py", line 205, in <lambda>
    lambda inner_input: self.parse_result([Generation(text=inner_input)]),
                        ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\output_parsers\pydantic.py", line 68, in parse_result
    json_object = super().parse_result(result)
  File "C:\Users\arkma\AppData\Local\Programs\Python\Python313\Lib\site-packages\langchain_core\output_parsers\json.py", line 91, in parse_result
    raise OutputParserException(msg, llm_output=text) from e
langchain_core.exceptions.OutputParserException: Invalid json output: Here is a list of claims extracted from the given text, following the provided schema:

1. The global warming crisis is real.
2. Kenny Pickett, Pittsburgh Steelers' quarterback, has had a nightmare season despite team success.
3. Josh Allen, Buffalo Bills' quarterback, ranks first in total QBR among AFC quarterbacks.
4. Tua Tagovailoa, Miami Dolphins' quarterback, ranks second in total QBR.
5. Patrick Mahomes, Kansas City Chiefs' quarterback, ranks third.
6. Justin Herbert, Los Angeles Chargers' quarterback, ranks fourth.
7. Lamar Jackson, Baltimore Ravens' quarterback, ranks fifth with the lowest total QBR among the listed quarterbacks.
8. Deshaun Watson, Cleveland Browns' quarterback, has a lower total QBR than Kenny Pickett.
9. Jimmy Garoppolo, Las Vegas Raiders' quarterback, has a lower total QBR than Trevor Lawrence.
10. Russell Wilson, Denver Broncos' quarterback, has a lower total QBR than C.J. Stroud.

These claims are presented in the required format according to the provided schema.
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE